name: Build&deploy to dev and prod

on:
  push:
    branches:
      - 'main'

env:
  IMAGE: ghcr.io/navikt/familie-ks-sak-frontend:${{ github.sha }}
  IMAGE_LATEST: ghcr.io/navikt/familie-ks-sak-frontend:latest
  VERSION: familie-ks-sak-frontend:${{ github.sha }}

jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-latest-8-cores
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: npm
          registry-url: "https://npm.pkg.github.com"
      - uses: ./.github/yarn-cache
      - name: Yarn install
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
        run: yarn --prefer-offline --frozen-lockfile
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_RELEASE: ${{ github.sha }}
        run: |
          yarn build
          yarn test
          yarn run cypress
          docker build . -t ${IMAGE} -t ${IMAGE_LATEST}
          echo ${GITHUB_TOKEN} | docker login ghcr.io --username ${GITHUB_REPOSITORY} --password-stdin
          docker push ${IMAGE}
          docker push ${IMAGE_LATEST} 
  deploy:
    name: Deploy to NAIS
    needs: build
    runs-on: ubuntu-latest-8-cores
    steps:
      - uses: actions/checkout@v4
      - name: Deploy til dev-gcp team namespace
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: build_n_deploy/naiserator/gcp-dev.yaml
          VAR: VERSION=${{ env.VERSION }}
      - name: Deploy til prod-gcp team namespace
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: build_n_deploy/naiserator/gcp-prod.yaml
          VAR: VERSION=${{ env.VERSION }}